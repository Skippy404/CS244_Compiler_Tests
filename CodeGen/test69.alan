{Expected Output: An array of <i> integers, starting with 0 and
oscilating 0 and 1. Where <i> is an integer retrieved from stdin.
All {commented} code for debuging.}

source test69

function yeet(boolean array bool, integer d) to integer array
begin
 integer array ret;
 integer i;
 ret := array d;
 i := 0;
 while (i < d) do
  if (bool[i] = true) then
   ret[i] := 1
  else
   ret[i] := 0
  end;
  i := i + 1
 end;
 leave ret
end

begin
 boolean array bool;
 integer array index;
 integer i, j;
 index := array 11;
 i := 1;
 while (i < 11) do
  index[i] := i - 1;
  i := i + 1
 end;
 
 i := 0;
 {while (i < 11) do
  put index[i] . "\n";
  i := i + 1
 end;}

 put "size of array to print?: ";
 get i;
 
 index[index[index[index[index[index[index[index[index[index[index[10]]]]]]]]]]] := i;
 {put "index[0]: " . index[0] . "\n";}
 bool := array index[0];
 
 i := 0;
 while (i < index[0]) do
  if (i rem 2) = 0 then
   bool[i] := false
  else
   bool[i] := true
  end;
  i := i + 1
 end;
 
 j := index[0];
 index := yeet(bool, index[0]);
 
 i := 0;
 while (i < j) do
  put index[i] . "\n";
  i := i + 1
 end
end
